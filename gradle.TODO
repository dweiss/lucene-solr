Things that gradle build is currently missing or
could use some improvement.

- create a 'distribution' subproject for Solr that packages everything as it was
  in the ant distribution.

- add any other ant-emulation layer tasks that copy solr libs all over source locations
  (unless we don't need it if packaging works?)

- jar checksums, jar checksum validation

- add an explanation to how the dependency system works (palantir plugin, lockfile) and
  how to retrieve structured information about current dependencies of a given module 
  (in a tree-like output)

- port precommit tasks

- apply forbiddenAPIs

- and other "check" utilities that may be called from ant

- port various "regenerate" tasks from ant builds (javacc, precompiled automata, etc.)

- passing test properties from command line
- configure build output folders. 
- configure security policy/ sandboxing for test processes.

- rendering of javadocs (gradlew javadoc)
- fill in POM details in defaults-maven.gradle

- fine-tune defaults so that they're saner (number of test workers running concurrently, 
  for example).

- any IDE integration layers, if required.

- clean up dependencies: any { transitive = false } should just explicitly exclude whatevery they don't need
  (and their dependencies currently declared explicitly should be folded).

- how is Solr distribution's docs/* assembled (see TODO in packaging/build.gradle)?


Intentional differences

- the back-compatibility target 'resolve' is added to gradle but it's really for informational purposes
  and debugging - it's not used anywhere in the actual build process.
  For Lucene it also does *not* copy test dependencies under lib/ (like ant version does).

- transitive export of certain core libraries from solr-core/ solrj (guava, etc.).