
// Maven publications and configuration.

configure(rootProject) {
  // Enumerate all projects that should be published to Maven repos.
  ext {
    published = [
        ":lucene:analysis:common",
        ":lucene:analysis:icu",
        ":lucene:analysis:kuromoji",
        ":lucene:analysis:morfologik",
        ":lucene:analysis:nori",
        ":lucene:analysis:opennlp",
        ":lucene:analysis:phonetic",
        ":lucene:analysis:smartcn",
        ":lucene:analysis:stempel",
        ":lucene:backward-codecs",
        ":lucene:benchmark",
        ":lucene:classification",
        ":lucene:codecs",
        ":lucene:core",
        ":lucene:demo",
        ":lucene:expressions",
        ":lucene:facet",
        ":lucene:grouping",
        ":lucene:highlighter",
        ":lucene:join",
        ":lucene:luke",
        ":lucene:memory",
        ":lucene:misc",
        ":lucene:monitor",
        ":lucene:queries",
        ":lucene:queryparser",
        ":lucene:replicator",
        ":lucene:sandbox",
        ":lucene:spatial",
        ":lucene:spatial-extras",
        ":lucene:spatial3d",
        ":lucene:suggest",
        ":lucene:test-framework",
    ]
  }

  configure(subprojects.findAll { it.path in rootProject.published }) {
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    publishing {
      // TODO: Add publishing repository details.
    }

    plugins.withType(JavaPlugin) {
      task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier = 'sources'
        from sourceSets.main.allJava
      }

      task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveClassifier = 'javadoc'
        from javadoc.destinationDir
      }

      publishing {
        def configurePom = {
          name = "Apache Solr/Lucene (${project.name})"
          licenses {
            license {
              name = 'Apache 2'
              url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
          }
        }

        publications {
          // JARS and sources, no javadocs (for local inspection only).
          jars(MavenPublication) {
            from components.java
            group = project.group
            artifactId = project.archivesBaseName

            artifact sourcesJar

            pom(configurePom)
          }

          // Full set of signed artifacts.
          signed(MavenPublication) {
            from components.java
            group = project.group
            artifactId = project.archivesBaseName

            artifact sourcesJar
            artifact javadocJar

            pom(configurePom)
          }
        }
      }

      signing {
        sign publishing.publications.signed
      }
    }
  }
}